name: Lazarus

defaults:
    run:
        shell: bash

permissions:
  contents: write


on:

  push:
    branches: [ lazarus ]
    tags: [ "*" ]
    paths-ignore: [ "README.md", "LICENSE", "CHANGELOG.md", ".github/cliff.toml" ]

  pull_request:
    branches: [ lazarus ]

jobs:

    build:
        runs-on: ${{ matrix.operating-system }}
        strategy:
            fail-fast: false
            matrix:
                operating-system: [ubuntu-latest]
                lazarus-versions: ["stable"]

        steps:
        - name: Checkout source code
          uses: actions/checkout@v4

        - name: Install Lazarus
          uses: gcarreno/setup-lazarus@v3
          with:
            lazarus-version: ${{ matrix.lazarus-versions }}
            with-cache: false

        - name: Build HeidiSQL (Ubuntu GTK)
          if: ${{ matrix.operating-system == 'ubuntu-latest' }}
          run: |
            echo Building with GTK2
            make heidisql-gtk2

        - name: Upload binaries GTK
          if: ${{ matrix.lazarus-versions == 'stable' }}
          uses: actions/upload-artifact@v4
          with:
            name: ${{ matrix.operating-system }}-GTK
            path: out/gtk2/heidisql

        - name: Getting libqt5pas-dev
          run: |
            sudo apt update
            sudo apt install -y libqt5pas-dev

        - name: Build HeidiSQL (Ubuntu QT)
          if: ${{ matrix.operating-system == 'ubuntu-latest' }}
          run: |
            echo Building with QT5
            make heidisql-qt5

        - name: Upload binaries QT
          if: ${{ matrix.lazarus-versions == 'stable' }}
          uses: actions/upload-artifact@v4
          with:
            name: ${{ matrix.operating-system }}-QT
            path: out/qt5/heidisql

    release:
        if: contains(github.ref_type, 'tag')

        name: Create GitHub Release
        runs-on: [ubuntu-latest]
        needs: [build]

        steps:
            - name: Checkout source code
              uses: actions/checkout@v4
              with:
                fetch-depth: 0

            - name: Set env
              run: echo "tag=${{ github.ref_name }}" >> "$GITHUB_ENV"

            - name: Download Ubuntu GTK
              uses: actions/download-artifact@v4
              with:
                name: ubuntu-latest-GTK
                path: out/gtk2

            - name: Download Ubuntu QT
              uses: actions/download-artifact@v4
              with:
                name: ubuntu-latest-QT
                path: out/qt5

            - name: List files
              run: |
                ls -alF out/gtk2
                ls -alF out/qt5

            - name: Install gettext
              run: sudo apt install -y gettext

            - name: Install FPM
              run: sudo gem install --no-document fpm

            - name: Pull from transifex
              uses: transifex/cli-action@v2
              with:
                token: ${{ secrets.TX_TOKEN }}
                args: pull -a

            - name: Create release archives (Linux GTK)
              run: make tar-gtk2

            - name: Create debian package
              run: make deb-package

            - name: Create release archives (Linux QT)
              run: make tar-qt5

            - name: Generate Release Notes
              id: git-cliff
              uses: orhun/git-cliff-action@main
              with:
                config: .github/cliff.toml
                args: --latest --strip header

            - name: Create GitHub release
              uses: softprops/action-gh-release@v2
              with:
                name: HeidiSQL Linux ${{ env.tag }}
                body: ${{ steps.git-cliff.outputs.content }}
                files: dist/*
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}