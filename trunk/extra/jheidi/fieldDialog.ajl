  import javax.swing.*;
  import java.util.*;

  WindowContext parentContext = argObj("windowContext");
  
  Dialog dlg = new Dialog((Frame)parentContext.get("/"), "fieldDialog", arg("fieldMode") + " Field" );
  WindowContext context = dlg.getWindowContext();
  context.put("db", parentContext.get("db"));
  context.put("currentDB", parentContext.get("currentDB"));
  context.put("currentTable", parentContext.get("currentTable"));
  context.put("fieldMode", arg("fieldMode"));
  
  dlg.events("fieldEvents");
  dlg.tabLayout()
    .insets(10, 10)
    .icon(arg("fieldMode").equals("Add")?"images/newfield.gif":"images/editfield.gif")
	  .text("Position:", 90)
    .setTab()
    .combo("positions", new String[] {"Hi"}, 200)
    .setTab()
    .nextRow()
    .tab(1)
    .text("Name:")
    .tab(2)
    .field("fieldName", 200)
    .nextRow()
    .tab(1)
    .text("Type:")
    .tab(2)
    .combo("types", new String[] {"Hi"}, 200)
    .nextRow()
    .tab(1)
    .text("Length/Set:")
    .tab(2)
    .field("lengthSet", 200)
    .nextRow()
    .tab(1)
    .text("Default:")
    .tab(2)
    .field("defaultValue", 200)
    .nextRow()
    .tab(1)
    .text("Comment:")
    .tab(2)
    .field("comment", 200)
    .nextRow()
    .space(-2)
    .groupbox("Attributes",LF.isWin?302:301, 87)
    .nextRow()
    .vspace(17)
    .space(LF.isWin?18:13)
    .checkbox("notNull", "Not Null", 90,  false)
    .setTab()
    .checkbox("autoInc", "Auto Increment", false)
    .setTab()
    .nextRow()
    .tab(3)
    .checkbox("binary", "Binary", 90, false)
    .tab(4)
    .checkbox("unsigned", "Unsigned", 95,false)
    .space(2)
    .checkbox("zeroFill", "Zero Fill", 77, false)
    .nextRow()
    .vspace(18)
    .space(37)
    .button(arg("fieldMode").equals("Add") ?"Add Field" : "Update Field", 110)
    .space(5)
    .button("Cancel", 110);
    
    DB db = context.get("db");
    db.begin();
    db.execute("use " + (String)context.get("currentDB"));
    DB.Result result = db.execute("show full columns from " + (String) context.get("currentTable"));
    db.end();
      
    Combo positions = context.get("/positions");
    String selField = arg("fieldToEdit");
    context.put("fieldToEdit", selField);
    HashObject selectField = null;
    String[] posList = new String[result.size() + (selField == null ?2 :3)];
    int c = 0;
    if ( selField != null )
    {
      posList[c++] = "";
    }
    posList[c++] = "Last";
    posList[c++] = "First";
    for (int i=0; i < result.size(); i++)
    {
      posList[i+c] = "After '" + result.get(i).get(0) + "'";
      if ( result.get(i).get(0).equals(selField) )
      {
        selectField = (HashObject)result.get(i);
      }
        
    }
    
    positions.setModel(new DefaultComboBoxModel(posList));
    
    ((Field)context.get("/fieldName")).setText("FieldName");
    ((JCheckBox)context.get("/autoInc")).setEnabled(false);
    
    HashObject newArgs = new HashObject();
    newArgs.put("windowContext", context);
    script("initMySQLTypes", newArgs);
    
    if ( selectField != null )
    { //populate the dialog
    
      ((Field)context.get("/fieldName")).setText(selectField.get("field"));
      String type = selectField.get("type");
      int paren = type.indexOf("(");
      String typeOnly = paren !=-1 ? type.substring(0, paren) : type.substring(0, type.indexOf(" "));
      ((Combo)context.get("/types")).select(typeOnly);
      if ( paren != -1 )
      {
        ((Field)context.get("/lengthSet")).setText(type.substring(paren+1, type.indexOf(")")));
      }
      ((Field)context.get("/defaultValue")).setText(selectField.get("default")!= null ? selectField.get("default") : "");
      ((Field)context.get("/comment")).setText(selectField.get("comment")!= null ? selectField.get("comment") : "");
      ((JCheckBox)context.get("/binary")).setSelected(type.contains("binary"));
      ((JCheckBox)context.get("/unsigned")).setSelected(type.contains("unsigned"));
      ((JCheckBox)context.get("/zeroFill")).setSelected(type.contains("zerofill"));
      ((JCheckBox)context.get("/notNull")).setSelected(selectField.get("null").equals("NO"));
      ((JCheckBox)context.get("/autoInc")).setSelected(selectField.get("extra") != null && 
          selectField.get("extra").contains("auto_increment"));
    }
      
    
    dlg.visible();
    
    return context.get("dlgResult");
    
    
